---
name: Release

on:  # yamllint disable-line rule:truthy
  pull_request:
  push:
    branches:
    - main

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.release.outputs.published }}
      release-git-tag: ${{ steps.release.outputs.release-git-tag }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Release
      id: release
      uses: ahmadnassri/action-semantic-release@v2.1.10
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  artifacts:
    needs: release
    name: Create Release Artifacts
    strategy:
      matrix:
        architecture: [aarch64, x86_64]
        ostype: [linux-gnu, linux-musl]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: docker/setup-qemu-action@v2
    - uses: docker/setup-buildx-action@v2
    - name: Set environment variables
      run: |
        echo "ARCHITECTURE=${{ matrix.architecture }}" >> $GITHUB_ENV
        echo "OSTYPE=${{ matrix.ostype }}" >> $GITHUB_ENV
        echo "REGISTRY=ghcr.io"
    - name: Build, and Package
      run: make build/package
    - name: Log in to the Container registry
      if: ${{ needs.release.outputs.published == 'true' }}
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Docker meta
      if: ${{ needs.release.outputs.published == 'true' }}
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/kong/template-github-release
        sep-tags: ' '
        flavor: |
          suffix=-${{ matrix.architecture }}-${{ matrix.ostype }}
        tags: |
          type=sha
          type=ref,event=branch
          type=semver,pattern={{version}},value=${{ needs.release.outputs.release-git-tag }}
          type=semver,pattern={{major}},value=${{ needs.release.outputs.release-git-tag }}
    - name: Retag and Push
      if: ${{ needs.release.outputs.published == 'true' }}
      run: |
        for tag in ${{ steps.meta.outputs.tags }}; do \
          docker tag ghcr.io/template-github-release:build-$ARCHITECTURE-$OSTYPE $tag && \
          docker push $tag; \
        done
    - name: Archive the package
      if: ${{ needs.release.outputs.published == 'true' }}
      run: |
        tar -C package -czvf ${{ matrix.architecture }}-${{ matrix.ostype }}.tar.gz .
    - name: Add Release Artifact to the Github Release
      if: ${{ needs.release.outputs.published == 'true' }}
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.release.outputs.release-git-tag }}
        files: ${{ matrix.architecture }}-${{ matrix.ostype }}.tar.gz
