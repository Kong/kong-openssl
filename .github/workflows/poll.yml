---
name: Poll

on: # yamllint disable-line rule:truthy
  schedule:
  # wednesday, friday at 00:00
  - cron: 0 0 * * 3,5
  workflow_dispatch:
    inputs:
      force:
        type: boolean
        default: false
        description: force PR creation
      debug:
        type: boolean
        default: false
        description: enable debug output
      version:
        type: string
        required: false
        description: manually supply openssl version

jobs:
  release:
    name: Poll OpenSSL Website
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Check OpenSSL Website
      id: site
      run: |
        if ${{ inputs.debug }} || [ -n "${DEBUG:-}" ]; then
          set -x
        fi

        set -eo pipefail

        fresh="$(
          grep -Eo -m1 -i '1\.1\.1.*available' <(
            curl -Ls 'https://www.openssl.org/news/newslog.html'
          ) | cut -d' ' -f1
        )"

        echo "fresh=${fresh}" >> $GITHUB_OUTPUT
    - name: Create PR
      env:
        GITHUB_TOKEN: ${{ github.token }}
        DEBUG: ${{ runner.debug == '1' && '1' || '' }}
      run: |
        if ${{ inputs.debug }} || [ -n "${DEBUG:-}" ]; then
          set -x
        fi

        if [ -n '${{ inputs.version }}' ]; then
          fresh='${{ inputs.version }}'
        else
          fresh=${{ steps.site.outputs.version }}
        fi

        source .env
        stale="$OPENSSL_VERSION"

        message="chore(*): update OpenSSL to ${fresh}"
        branch="chore/openssl-${fresh}"

        if ${{ inputs.debug }} || [[ "$fresh" != "$stale" ]]; then

          # PR already created for fresh version
          if gh pr list | grep "$message"; then
            exit 0
          fi

          gh auth setup-git

          git config user.name github-actions
          git config user.email github-actions@github.com

          git checkout -b "$branch"

          echo "OPENSSL_VERSION=${fresh}" > .env
          git add .env
          git commit -m "chore(*): update OpenSSL to ${fresh}"

          git push origin "$branch"

          gh pr create \
            --head "$branch" \
            --title "$message" \
            --body "$(
              echo -e "### Summary\n\nUpdate to ${fresh}. Generated by GitHub Actions."
            )" \
            | grep -Eo '\d+$'

          pr="$(gh pr list | grep "$message" | cut -d$'\t' -f1)"

          gh pr merge --auto "$pr"
        fi
